{"version":3,"sources":["redux/types/index.js","services/api/index.js","redux/actions/index.js","components/views/Dashboard/Dashboard.jsx","components/common/Footer/Footer.jsx","components/views/About/About.jsx","components/views/NotFound/NotFound.jsx","components/common/Navbar/Navbar.jsx","components/views/Splash/Splash.jsx","redux/reducers/index.js","redux/store/index.js","Router.jsx","serviceWorker.js","index.js"],"names":["apiUrl","api","baseURL","apisauce","create","headers","timeout","getReposFromGithub","queryStr","get","q","filters","page","lastResults","dispatch","getState","console","log","type","types","payload","filterStr","stars","relevance","then","res","ok","data","joinedRepos","items","concat","newPayload","catch","err","Dashboard","navBarHeight","searchResultsBar","state","starsFilter","relevanceFilter","handleStarsFilterChange","e","setState","target","value","props","search","handleRelevanceFilterChange","loadMoreRepos","repos","isLoadingMore","results","renderRepoCards","isFetching","Grid","container","item","xs","style","textAlign","marginTop","CircularProgress","size","length","height","window","innerHeight","width","overflowY","pageStart","loadMore","hasMore","loader","marginBottom","color","useWindow","map","repo","paddingLeft","paddingTop","key","id","Card","cursor","onClick","open","svn_url","focus","margin","textOverflow","whiteSpace","overflow","fontSize","fontWeight","name","Star","marginLeft","nFormatter","stargazers_count","padding","display","WebkitLineClamp","WebkitBoxOrient","description","Code","language","Avatar","src","owner","avatar_url","login","num","digits","i","si","symbol","toFixed","replace","classes","this","Paper","MenuList","MenuItem","className","headerMenuItem","disableRipple","disableGutters","disableTouchRipple","ListItemText","headerText","primary","Divider","FormControl","variant","InputLabel","Select","onChange","labelWidth","Clear","total_count","Component","styledComponent","withStyles","theme","menuItem","backgroundColor","palette","common","white","main","activeMenuItem","icon","connect","ReduxActions","Footer","position","bottom","left","About","paddingBottom","md","CardContent","textTransform","NotFound","history","push","Navbar","tabValue","handleRouteChange","route","override","location","handleChange","event","routerTabs","label","LogoBtn","withRouter","AppBar","background","Tabs","indicatorColor","textColor","tab","RouterTab","Tab","grow","flexGrow","navItem","marginRight","navItemActive","borderBottom","menuButton","Splash","searchText","isSearchError","handleSearchTextChange","handleEnterKeyPress","keyCode","doSearchForRepos","fontStyle","TextField","placeholder","helperText","fullWidth","inputProps","onKeyPress","InputProps","autoFocus","endAdornment","InputAdornment","IconButton","aria-label","error","InputLabelProps","shrink","focused","Button","paddingRight","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","enhancer","applyMiddleware","store","createStore","rootReducer","createMuiTheme","typography","useNextVariants","secondary","light","contrastText","AppRouter","MuiThemeProvider","path","exact","component","Boolean","hostname","match","ReactDOM","render","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b62acfa5.chunk.js","sourcesContent":["export default {\n  GET_REPOS_FROM_GITHUB: \"GET_REPOS_FROM_GITHUB\",\n  GET_REPOS_FROM_GITHUB_SUCCESS: \"GET_REPOS_FROM_GITHUB_SUCCESS\",\n  GET_REPOS_FROM_GITHUB_ERROR: \"GET_REPOS_FROM_GITHUB_ERROR\",\n  SET_SEARCH_CRITERIA: \"SET_SEARCH_CRITERIA\",\n  LOAD_MORE_REPOS_FROM_GITHUB: \"LOAD_MORE_REPOS_FROM_GITHUB\",\n  LOAD_MORE_REPOS_FROM_GITHUB_SUCCESS: \"LOAD_MORE_REPOS_FROM_GITHUB_SUCCESS\"\n};\n","import apisauce from \"apisauce\";\n\nconst apiUrl = \"https://api.github.com/search/\";\n\nconst create = (baseURL = apiUrl) => {\n  const api = apisauce.create({\n    baseURL,\n    headers: {\n      // 'Cache-Control': 'no-cache',\n      // 'Cache-Control': 'no-cache',\n      // 'Content-Type': 'application/json'\n    },\n    // withCredentials: true,\n    timeout: 5000\n  });\n\n  const getReposFromGithub = queryStr => api.get(`repositories?${queryStr}`);\n\n  return {\n    getReposFromGithub\n  };\n};\n\nconst api = create();\n\nexport default api;\n","import types from \"../types/\";\nimport api from \"../../services/api/\";\n\nconst getReposFromGithub = (q, filters, page, lastResults) => (\n  dispatch,\n  getState\n) => {\n  console.log(q, filters, page, lastResults);\n  if (lastResults) {\n    dispatch({\n      type: types.LOAD_MORE_REPOS_FROM_GITHUB,\n      payload: lastResults\n    });\n  } else {\n    dispatch({\n      type: types.GET_REPOS_FROM_GITHUB\n    });\n  }\n\n  dispatch({\n    type: types.SET_SEARCH_CRITERIA,\n    payload: {\n      q,\n      filters,\n      page\n    }\n  });\n\n  let queryStr = `q=${q}&page=${page}`;\n  let filterStr;\n\n  if (filters) {\n    if (filters.stars) {\n      filterStr = `&sort=stars&order=${filters.stars}`;\n    }\n    if (filters.relevance) {\n      filterStr = `&order=${filters.relevance}`;\n    }\n  }\n\n  if (filterStr) {\n    queryStr = queryStr + filterStr;\n  }\n\n  api\n    .getReposFromGithub(queryStr)\n    .then(res => {\n      if (res.ok) {\n        const payload = res.data;\n\n        if (lastResults) {\n          let joinedRepos = lastResults.items.concat(payload.items);\n\n          let newPayload = payload;\n          newPayload.items = joinedRepos;\n\n          dispatch({\n            type: types.LOAD_MORE_REPOS_FROM_GITHUB_SUCCESS,\n            payload: newPayload\n          });\n        } else {\n          dispatch({\n            type: types.GET_REPOS_FROM_GITHUB_SUCCESS,\n            payload\n          });\n        }\n      } else {\n        dispatch({\n          type: types.GET_REPOS_FROM_GITHUB_ERROR\n        });\n      }\n    })\n    .catch(err => {\n      dispatch({\n        type: types.GET_REPOS_FROM_GITHUB_ERROR,\n        payload: err\n      });\n    });\n};\n\nexport default {\n  getReposFromGithub\n};\n","import React, { Component } from \"react\";\nimport {\n  withStyles,\n  MuiThemeProvider,\n  createMuiTheme\n} from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  MenuList,\n  Paper,\n  ListItemText,\n  Grid,\n  Card,\n  Avatar,\n  Divider,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Fab,\n  Select\n} from \"@material-ui/core\";\nimport { Star, Code, Clear } from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nimport ReduxActions from \"../../../redux/actions/index\";\n\nconst styles = theme => ({\n  menuItem: {\n    \"&:hover\": {\n      backgroundColor: \"grey\",\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    },\n    \"&:active\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    },\n    \"&:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    }\n  },\n  activeMenuItem: {\n    \"$primary, & $icon\": {\n      color: theme.palette.common.white\n    },\n    backgroundColor: theme.palette.primary.main,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    },\n    \"&:active\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    },\n    \"&:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    }\n    // '$primary, & $icon': {\n    //     color: theme.palette.common.white,\n    // }\n  },\n  headerMenuItem: {\n    \"&:hover\": {\n      backgroundColor: \"white\"\n    },\n    \"&:focus\": {\n      backgroundColor: \"white\"\n    },\n    cursor: \"auto\"\n  },\n  headerText: {\n    fontWeight: \"bold\",\n    fontSize: 18,\n    textAlign: \"center\"\n  },\n  primary: {},\n  icon: {}\n});\n\nclass Dashboard extends Component {\n  navBarHeight = 50; // todo: move to utils/metrics etc.\n  searchResultsBar = 60;\n\n  state = {\n    starsFilter: \"\",\n    relevanceFilter: \"\"\n  };\n\n  componentDidMount() {}\n\n  handleStarsFilterChange = e => {\n    this.setState(\n      {\n        starsFilter: e.target.value,\n        relevanceFilter: \"\"\n      },\n      () => {\n        this.props.getReposFromGithub(\n          this.props.search.q,\n          {\n            stars: this.state.starsFilter,\n            relevance: this.state.relevanceFilter\n          },\n          1,\n          null\n        );\n      }\n    );\n  };\n\n  handleRelevanceFilterChange = e => {\n    this.setState(\n      {\n        relevanceFilter: e.target.value,\n        starsFilter: \"\"\n      },\n      () => {\n        this.props.getReposFromGithub(\n          this.props.search.q,\n          {\n            stars: this.state.starsFilter,\n            relevance: this.state.relevanceFilter\n          },\n          1,\n          null\n        );\n      }\n    );\n  };\n\n  // https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  nFormatter(num, digits) {\n    var si = [\n      { value: 1, symbol: \"\" },\n      { value: 1e3, symbol: \"k\" },\n      { value: 1e6, symbol: \"M\" }\n    ];\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  }\n\n  loadMoreRepos = () => {\n    // query string, filters array, page number, lastResults object (for pagination infinity scroll) -- with more time would have done backload pagination\n    // -- currently page will crash if scroll forever because too many DOM elems\n    if (!this.props.repos.isLoadingMore) {\n      this.props.getReposFromGithub(\n        this.props.search.q,\n        {\n          stars: this.state.starsFilter,\n          relevance: this.state.relevanceFilter\n        }, // add filters\n        this.props.search.page + 1,\n        this.props.repos.results\n      );\n    }\n  };\n\n  renderRepoCards = () => {\n    console.log(this.props);\n\n    if (\n      !this.props.repos.isFetching &&\n      !this.props.repos.err &&\n      this.props.repos.results\n    ) {\n      const results = this.props.repos.results;\n      if (results.items && results.items.length) {\n        return (\n          <div\n            style={{\n              height:\n                window.innerHeight - this.navBarHeight - this.searchResultsBar,\n              width: \"100%\",\n              overflowY: \"scroll\"\n            }}\n          >\n            <InfiniteScroll\n              pageStart={this.props.search.page ? this.props.search.page : 0}\n              loadMore={this.loadMoreRepos}\n              hasMore={true}\n              loader={\n                <Grid container>\n                  <Grid\n                    item\n                    xs={12}\n                    style={{\n                      textAlign: \"center\",\n                      marginTop: 20,\n                      marginBottom: 10\n                    }}\n                  >\n                    loading more.\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    style={{\n                      textAlign: \"center\",\n                      marginBottom: 20\n                    }}\n                  >\n                    <CircularProgress color=\"black\" size={20} />\n                  </Grid>\n                </Grid>\n              }\n              useWindow={false}\n            >\n              <Grid container>\n                {results.items.map(repo => {\n                  return (\n                    <Grid\n                      item\n                      xs={4}\n                      style={{ paddingLeft: 10, paddingTop: 10 }}\n                      key={repo.id}\n                    >\n                      <Card\n                        style={{ height: 160, cursor: \"pointer\" }}\n                        onClick={() => {\n                          const win = window.open(repo.svn_url, \"_blank\");\n                          win.focus();\n                        }}\n                      >\n                        <Grid\n                          container\n                          style={{\n                            margin: 10\n                          }}\n                        >\n                          <Grid item xs={9}>\n                            <div\n                              style={{\n                                textOverflow: \"ellipsis\",\n                                whiteSpace: \"nowrap\",\n                                overflow: \"hidden\",\n                                fontSize: 18,\n                                fontWeight: \"bold\"\n                              }}\n                            >\n                              {repo.name}\n                            </div>\n                          </Grid>\n                          <Grid item xs={3}>\n                            <Grid container>\n                              <Grid\n                                item\n                                xs={3}\n                                style={{\n                                  textAlign: \"center\"\n                                }}\n                              >\n                                <Star\n                                  fontSize=\"small\"\n                                  style={{\n                                    color: \"gold\"\n                                  }}\n                                />\n                              </Grid>\n                              <Grid\n                                item\n                                xs={8}\n                                style={{\n                                  marginLeft: 5,\n                                  fontSize: 10,\n                                  marginTop: 4,\n                                  fontWeight: \"bold\",\n                                  textAlign: \"left\"\n                                }}\n                              >\n                                {this.nFormatter(repo.stargazers_count, 1)}\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Grid container>\n                          <Grid\n                            item\n                            xs={12}\n                            style={{\n                              padding: 10,\n                              overflow: \"hidden\",\n                              display: \"-webkit-box\",\n                              WebkitLineClamp: 3,\n                              WebkitBoxOrient: \"vertical\",\n                              height: 60,\n                              color: \"#908b8b\"\n                            }}\n                          >\n                            {repo.description}\n                          </Grid>\n                        </Grid>\n                        <Grid container style={{ padding: 10 }}>\n                          <Grid item xs={7}>\n                            <Grid container>\n                              <Grid\n                                item\n                                xs={2}\n                                style={{\n                                  textAlign: \"left\"\n                                }}\n                              >\n                                <Code fontSize=\"small\" />\n                              </Grid>\n                              <Grid\n                                item\n                                xs={10}\n                                style={{\n                                  textAlign: \"left\",\n                                  fontSize: 10,\n                                  marginTop: 4,\n                                  fontWeight: \"bold\"\n                                }}\n                              >\n                                {repo.language ? repo.language : \"N/A\"}\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                          <Grid item xs={5}>\n                            <Grid container>\n                              <Grid\n                                item\n                                xs={2}\n                                style={{\n                                  textAlign: \"left\"\n                                }}\n                              >\n                                <Avatar\n                                  style={{ height: 20, width: 20 }}\n                                  src={repo.owner.avatar_url}\n                                />\n                              </Grid>\n                              <Grid\n                                item\n                                xs={9}\n                                style={{\n                                  textAlign: \"left\",\n                                  fontSize: 10,\n                                  marginTop: 4,\n                                  fontWeight: \"bold\",\n                                  marginLeft: 5\n                                }}\n                              >\n                                {repo.owner.login}\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Card>\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            </InfiniteScroll>\n          </div>\n        );\n      }\n    } else {\n      return (\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            style={{\n              textAlign: \"center\",\n              marginTop: 200\n            }}\n          >\n            <CircularProgress size={80} />\n          </Grid>\n        </Grid>\n      );\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper\n            style={{\n              height: window.innerHeight - this.navBarHeight\n            }}\n          >\n            <MenuList>\n              <MenuItem\n                className={classes.headerMenuItem}\n                disableRipple\n                disableGutters\n                disableTouchRipple\n              >\n                <ListItemText className={classes.headerText} primary=\"Sort\" />\n              </MenuItem>\n              <Divider />\n              <MenuItem\n                className={classes.headerMenuItem}\n                style={{ margin: 15 }}\n                disableRipple\n                disableGutters\n                disableTouchRipple\n              >\n                <FormControl\n                  variant=\"outlined\"\n                  style={{ width: \"100%\", marginTop: 5 }}\n                >\n                  <InputLabel>By Stars</InputLabel>\n                  <Select\n                    value={this.state.starsFilter}\n                    onChange={this.handleStarsFilterChange}\n                    labelWidth={60}\n                  >\n                    <MenuItem value=\"asc\">Minimum</MenuItem>\n                    <MenuItem value=\"desc\">Maximum</MenuItem>\n                  </Select>\n                </FormControl>\n                <Clear\n                  style={{\n                    marginLeft: 10,\n                    color: \"grey\",\n                    cursor: \"pointer\"\n                  }}\n                  onClick={() => {\n                    this.setState(\n                      {\n                        starsFilter: \"\"\n                      },\n                      () => {\n                        this.props.getReposFromGithub(\n                          this.props.search.q,\n                          {\n                            stars: this.state.starsFilter,\n                            relevance: this.state.relevanceFilter\n                          },\n                          1,\n                          null\n                        );\n                      }\n                    );\n                  }}\n                />\n              </MenuItem>\n              <MenuItem\n                className={classes.headerMenuItem}\n                style={{ margin: 15 }}\n                disableRipple\n                disableGutters\n                disableTouchRipple\n              >\n                <FormControl\n                  variant=\"outlined\"\n                  style={{ width: \"100%\", marginTop: 5 }}\n                >\n                  <InputLabel>By Relevance</InputLabel>\n                  <Select\n                    value={this.state.relevanceFilter}\n                    onChange={this.handleRelevanceFilterChange}\n                    labelWidth={100}\n                  >\n                    <MenuItem value=\"asc\">Least</MenuItem>\n                    <MenuItem value=\"desc\">Most</MenuItem>\n                  </Select>\n                </FormControl>\n                <Clear\n                  style={{\n                    marginLeft: 10,\n                    color: \"grey\",\n                    cursor: \"pointer\"\n                  }}\n                  onClick={() => {\n                    this.setState(\n                      {\n                        relevanceFilter: \"\"\n                      },\n                      () => {\n                        this.props.getReposFromGithub(\n                          this.props.search.q,\n                          {\n                            stars: this.state.starsFilter,\n                            relevance: this.state.relevanceFilter\n                          },\n                          1,\n                          null\n                        );\n                      }\n                    );\n                  }}\n                />\n              </MenuItem>\n            </MenuList>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Grid\n            container\n            style={{\n              height: this.searchResultsBar,\n              width: \"100%\"\n            }}\n          >\n            <Grid item xs={12}>\n              <div style={{ padding: 18, textAlign: \"center\" }}>\n                {this.props.repos.results &&\n                this.props.repos.results.items &&\n                this.props.repos.results.items.length &&\n                this.props.repos.results.total_count\n                  ? `${this.props.repos.results.total_count} results for ${this.props.search.q}.`\n                  : this.props.repos.isFetching && this.props.search.q\n                  ? \"Searching...\"\n                  : `No results for ${this.props.search.q}.`}\n              </div>\n              <Divider />\n            </Grid>\n          </Grid>\n          {this.renderRepoCards()}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getReposFromGithub: (q, filters, page, lastResults) =>\n      dispatch(ReduxActions.getReposFromGithub(q, filters, page, lastResults))\n  };\n};\n\nconst styledComponent = withStyles(styles)(Dashboard);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(styledComponent);\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n  Divider\n} from \"@material-ui/core\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: 0,\n          left: 0,\n          height: 50,\n          width: \"100%\"\n        }}\n      >\n        <Divider />\n        <Grid container>\n          <Grid item xs={4} />\n          <Grid item xs={4} style={{ marginTop: 15, textAlign: \"center\" }}>\n            <div\n              style={{\n                color: \"#908b8b\",\n                cursor: \"pointer\"\n              }}\n              onClick={() => {\n                window.open(\n                  \"https://github.com/TheReactGuys?tab=repositories\",\n                  \"_blank\"\n                );\n              }}\n            >\n              @thereactguys\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n  Divider,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\n\nimport Footer from \"../../common/Footer/Footer\";\n\nclass About extends Component {\n  render() {\n    return (\n      <Grid container style={{ marginTop: 100, paddingBottom: 200 }}>\n        <Grid item xs={1} md={2} />\n        <Grid item xs={10} md={8}>\n          <Card>\n            <CardContent>\n              <h1 style={{ textTransform: \"uppercase\" }}>about the app.</h1>\n              <Divider />\n              <p style={{ margin: 15, marginTop: 15, fontSize: 18 }}>\n                This portal was created to help you find relevant and popular\n                repos. (And, to secure my opportunity at Travelers Haven!!)\n              </p>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Footer />\n      </Grid>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\n\nclass NotFound extends Component {\n  componentDidMount() {\n    this.props.history.push(\"/\");\n  }\n  render() {\n    return <div>This page does not exist.</div>;\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\n// import PropTypes from 'prop-types';\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Tabs, Tab, Grid } from \"@material-ui/core\";\n\nconst styles = {\n  grow: {\n    flexGrow: 1,\n    color: \"dodgerblue\"\n  },\n  navItem: {\n    // just use css so media queries can control the responsiveness\n    color: \"dodgerblue\",\n    marginRight: 40,\n    marginTop: 20,\n    paddingBottom: 20\n  },\n  navItemActive: {\n    // just use css so media queries can control the responsiveness\n    color: \"dodgerblue\",\n    borderBottom: \"10px solid dodgerblue\",\n    marginRight: 40,\n    marginTop: 30,\n    paddingBottom: 20\n  },\n  menuButton: {\n    color: \"black\",\n    marginLeft: 20\n  }\n};\n\nclass Navbar extends Component {\n  state = {\n    tabValue: 0\n  };\n\n  handleRouteChange = (history, route, tabValue, override) => {\n    this.setState({ tabValue }, () => {\n      if (history.location.search && !override) {\n        history.push(route + history.location.search);\n      } else {\n        history.push(route);\n      }\n    });\n  };\n\n  handleChange = (event, tabValue) => {\n    this.setState({ tabValue }, () => {});\n  };\n\n  render() {\n    const routerTabs = [\n      { label: \"Search Repos\", route: \"/\" },\n      { label: \"About\", route: \"/about\" }\n    ];\n\n    const renderRouterTabs = () => {\n      return (\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          value={this.state.tabValue}\n        >\n          {routerTabs.map((tab, i) => {\n            const RouterTab = withRouter(({ history }) => (\n              <Tab\n                label={tab.label}\n                style={{ color: \"black\", fontWeight: \"bold\", fontSize: 16 }}\n                onClick={() =>\n                  this.handleRouteChange(history, tab.route, i, false)\n                }\n              />\n            ));\n            return <RouterTab />;\n          })}\n        </Tabs>\n      );\n    };\n\n    const LogoBtn = withRouter(({ history }) => (\n      <div\n        id=\"navLogo\"\n        onClick={() => this.handleRouteChange(history, \"/\", 0, true)}\n        style={{\n          color: \"dodgerblue\",\n          fontSize: 20,\n          fontWeight: \"bold\",\n          paddingTop: 10,\n          paddingLeft: 10,\n          textAlign: \"center\",\n          cursor: \"pointer\"\n        }}\n      >\n        RepoHunter\n      </div>\n    ));\n\n    return (\n      <AppBar position=\"fixed\" style={{ background: \"white\" }}>\n        <Grid container>\n          <Grid item xs={2}>\n            <Grid container>\n              {/* TODO: for mobile navDrawer */}\n              {/* <Grid item xs={1}> */}\n              {/* xs should be 2 when in mobile, 1 is to center logo */}\n              {/* <IconButton\n                    className={classes.menuButton}\n                    color=\"inherit\"\n                    aria-label=\"Menu\"\n                    onClick={() => this.toggleDrawer(true)}\n                >\n                    <MenuIcon />\n                </IconButton> */}\n              {/* </Grid> */}\n              <Grid item xs={10}>\n                <LogoBtn />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={7}>\n            {renderRouterTabs()}\n          </Grid>\n        </Grid>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles)(Navbar);\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n  Divider\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\n\nimport Footer from \"../../common/Footer/Footer\";\nimport ReduxActions from \"../../../redux/actions/index\";\n\nimport \"./css/style.css\";\n\nclass Splash extends Component {\n  state = {\n    searchText: \"\",\n    isSearchError: false\n  };\n\n  handleSearchTextChange = e => {\n    if (e.target.value) {\n      this.setState({\n        isSearchError: false\n      });\n    }\n    this.setState({\n      searchText: e.target.value\n    });\n  };\n\n  handleEnterKeyPress = e => {\n    if (e.key == \"Enter\" || e.keyCode == 13) {\n      this.doSearchForRepos();\n    }\n  };\n\n  doSearchForRepos = () => {\n    if (this.state.searchText) {\n      this.setState({\n        isSearchError: false\n      });\n      this.props.history.push(\"/dashboard\");\n      // query string, filters array, page number, lastResults object (for pagination infinity scroll) -- with more time would have done backload pagination\n      // -- currently page will crash if scroll forever because too many DOM elems\n      this.props.getReposFromGithub(this.state.searchText, null, 1, null); // todo: add filters\n    } else {\n      this.setState({\n        isSearchError: true\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Grid container>\n        <Grid container>\n          <Grid item xs={1} />\n          <Grid item xs={10}>\n            <div style={{ marginTop: 50, marginBottom: 20, textAlign: \"left\" }}>\n              <h1 style={{ textTransform: \"uppercase\" }}>\n                hunt for the right repository.\n              </h1>\n              <div style={{ color: \"dodgerblue\", marginTop: -20 }}>\n                <span style={{ fontWeight: 400, fontSize: 26 }}>\n                  Enhance your skills -\n                </span>\n                <span\n                  style={{\n                    fontWeight: 600,\n                    marginLeft: 10,\n                    fontSize: 26,\n                    fontStyle: \"italic\"\n                  }}\n                >\n                  contribute to an open-source project!\n                </span>\n              </div>\n            </div>\n          </Grid>\n          <Grid container>\n            <Grid item xs={1} />\n            <Grid item xs={10}>\n              <Grid item xs={12}>\n                <h3 style={{ textTransform: \"uppercase\" }}>explore</h3>\n                <Divider />\n              </Grid>\n              <Grid\n                container\n                style={{\n                  height: 150,\n                  padding: 15,\n                  marginTop: 40,\n                  marginBottom: 30\n                }}\n              >\n                <Grid item xs={2} />\n                <Grid item xs={8}>\n                  <TextField\n                    id=\"searchInput\"\n                    label=\"What?\"\n                    placeholder=\"Material-UI, React, Angular etc.\"\n                    helperText={\n                      this.state.isSearchError\n                        ? \"Please enter a repository name or keywords.\"\n                        : \"repository name or keywords\"\n                    }\n                    fullWidth\n                    type=\"search\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    inputProps={{\n                      style: {\n                        height: 35\n                      }\n                    }}\n                    onKeyPress={this.handleEnterKeyPress}\n                    value={this.state.searchText}\n                    onChange={this.handleSearchTextChange}\n                    InputProps={{\n                      autoFocus: true,\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"Search.\"\n                            onClick={() => {\n                              this.doSearchForRepos();\n                            }}\n                          >\n                            <i className=\"fas fa-search\"></i>\n                          </IconButton>\n                        </InputAdornment>\n                      )\n                    }}\n                    error={this.state.isSearchError}\n                    InputLabelProps={{\n                      shrink: true,\n                      focused: true,\n                      style: {\n                        fontWeight: \"bold\",\n                        fontSize: 24,\n                        color: this.state.isSearchError ? \"red\" : \"dodgerblue\"\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                <Button\n                  variant=\"contained\"\n                  onClick={this.doSearchForRepos}\n                  style={{\n                    backgroundColor: \"dodgerblue\",\n                    paddingLeft: 25,\n                    paddingRight: 25,\n                    fontSize: 18,\n                    width: 200,\n                    color: \"white\"\n                  }}\n                >\n                  Search\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs={1} />\n            <Grid item xs={10}>\n              <Grid item xs={12}>\n                <h3 style={{ textTransform: \"uppercase\" }}>for you</h3>\n                <Divider />\n              </Grid>\n              <Grid item xs={12} style={{ marginTop: 15 }}>\n                Coming soon!\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Footer />\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getReposFromGithub: (q, filters, page, lastResults) =>\n      dispatch(ReduxActions.getReposFromGithub(q, filters, page, lastResults))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Splash);\n","import { combineReducers } from \"redux\";\n\nimport types from \"../types/\";\n\nconst repos = (\n  state = {\n    isFetching: false,\n    results: false,\n    err: false,\n    isLoadingMore: false\n  },\n  action\n) => {\n  switch (action.type) {\n    case types.GET_REPOS_FROM_GITHUB:\n      return {\n        isFetching: true,\n        results: false,\n        err: false,\n        isLoadingMore: false\n      };\n    case types.GET_REPOS_FROM_GITHUB_SUCCESS:\n      return {\n        isFetching: false,\n        results: action.payload,\n        err: false,\n        isLoadingMore: false\n      };\n    case types.LOAD_MORE_REPOS_FROM_GITHUB:\n      return {\n        isFetching: false,\n        results: action.payload,\n        err: false,\n        isLoadingMore: true\n      };\n    case types.LOAD_MORE_REPOS_FROM_GITHUB_SUCCESS:\n      return {\n        isFetching: false,\n        results: action.payload,\n        err: false,\n        isLoadingMore: false\n      };\n    case types.GET_REPOS_FROM_GITHUB_ERROR:\n      return {\n        isFetching: false,\n        results: false,\n        err: action.payload,\n        isLoadingMore: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst search = (state = { q: false, filters: false, page: false }, action) => {\n  switch (action.type) {\n    case types.SET_SEARCH_CRITERIA:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  repos,\n  search\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { logger } from \"redux-logger\";\n\nimport rootReducer from \"../reducers\";\n\n// enable redux devtool\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst middlewares = [thunk];\nif (!process.env.NODE_ENV || process.env.NODE_ENV == \"development\") {\n  middlewares.push(logger);\n}\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\nconst store = createStore(rootReducer, enhancer);\nexport default store;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport {\n  withStyles,\n  MuiThemeProvider,\n  createMuiTheme\n} from \"@material-ui/core/styles\";\nimport { Provider } from \"react-redux\";\n\nimport Dashboard from \"./components/views/Dashboard/Dashboard\";\nimport About from \"./components/views/About/About\";\nimport NotFound from \"./components/views/NotFound/NotFound\";\nimport Navbar from \"./components/common/Navbar/Navbar\";\nimport Splash from \"./components/views/Splash/Splash\";\n\nimport store from \"./redux/store/\";\n\nimport \"./index.css\";\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    // only takes hexcodes\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: \"#1e90ff\"\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: \"#0066ff\",\n      main: \"#0044ff\",\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: \"#ffcc00\"\n    }\n    // error: will use the default color\n  }\n});\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <MuiThemeProvider theme={theme}>\n              <Navbar />\n              <div style={{ marginTop: 50 }}>\n                <Switch>\n                  <Route path=\"/\" exact component={Splash} />\n                  <Route path=\"/dashboard\" exact component={Dashboard} />\n                  <Route path=\"/about\" exact component={About} />\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n            </MuiThemeProvider>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./Router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}