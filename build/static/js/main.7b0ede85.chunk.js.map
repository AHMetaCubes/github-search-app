{"version":3,"sources":["redux/types/index.js","services/api/index.js","redux/actions/index.js","components/views/Dashboard/Dashboard.jsx","components/views/About/About.jsx","components/views/NotFound/NotFound.jsx","components/views/Splash/Splash.jsx","components/common/Navbar/Navbar.jsx","components/common/Footer/Footer.jsx","redux/reducers/index.js","redux/store/index.js","Router.jsx","serviceWorker.js","index.js"],"names":["apiUrl","api","baseURL","apisauce","create","headers","timeout","getReposFromGithub","queryStr","get","q","filter","page","lastResults","dispatch","getState","type","types","payload","filterStr","then","res","ok","data","joinedRepos","items","concat","newPayload","catch","err","Dashboard","navBarHeight","state","selectedSortFilter","searchText","isSearchError","handleSearchTextChange","e","target","value","setState","handleEnterKeyPress","key","keyCode","doSearchForRepos","handleSelectedFilter","props","search","loadMoreRepos","repos","isLoadingMore","results","history","push","this","num","digits","i","si","symbol","length","toFixed","replace","isFetching","Grid","container","item","xs","style","textAlign","marginTop","CircularProgress","size","maxHeight","window","innerWidth","innerHeight","overflowY","pageStart","loadMore","hasMore","loader","marginBottom","color","useWindow","map","repo","md","paddingLeft","paddingTop","id","Card","height","cursor","onClick","open","svn_url","focus","margin","textOverflow","whiteSpace","overflow","fontSize","fontWeight","name","Star","marginLeft","nFormatter","stargazers_count","padding","display","WebkitLineClamp","WebkitBoxOrient","description","Code","language","Avatar","width","src","owner","avatar_url","login","total_count","CardMedia","image","title","CardContent","textTransform","Divider","JSON","stringify","TextField","label","placeholder","helperText","fullWidth","variant","inputProps","onKeyPress","onChange","InputProps","autoFocus","endAdornment","InputAdornment","position","IconButton","aria-label","className","error","InputLabelProps","shrink","focused","FormControl","InputLabel","Select","labelWidth","MenuItem","renderSearchNav","wordWrap","wordBreak","renderRepoCards","Component","styledComponent","withStyles","theme","menuItem","backgroundColor","palette","common","white","primary","main","activeMenuItem","headerMenuItem","headerText","icon","connect","filters","ReduxActions","About","paddingBottom","NotFound","Splash","fontStyle","Button","paddingRight","Navbar","tabValue","handleRouteChange","route","override","location","handleChange","event","routerTabs","LogoBtn","withRouter","AppBar","background","Tabs","indicatorColor","textColor","tab","RouterTab","Tab","grow","flexGrow","navItem","marginRight","navItemActive","borderBottom","menuButton","Footer","bottom","left","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","enhancer","applyMiddleware","store","createStore","rootReducer","createMuiTheme","typography","useNextVariants","secondary","light","contrastText","AppRouter","MuiThemeProvider","path","exact","component","Boolean","hostname","match","ReactDOM","render","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0jBAAe,EACU,wBADV,EAEkB,gCAFlB,EAGgB,8BAHhB,EAIQ,sBAJR,EAKgB,8BALhB,EAMwB,sC,iBCJjCA,EAAS,iCAuBAC,EArBA,WAAuB,IAAtBC,EAAqB,uDAAXF,EAClBC,EAAME,IAASC,OAAO,CAC1BF,UACAG,QAAS,GAMTC,QAAS,MAGLC,EAAqB,SAAAC,GAAQ,OAAIP,EAAIQ,IAAJ,uBAAwBD,KAE/D,MAAO,CACLD,sBAIQH,GCqEG,EAzFY,SAACM,EAAGC,EAAQC,EAAMC,GAAlB,OAAkC,SAC3DC,EACAC,GAGED,EADED,EACO,CACPG,KAAMC,EACNC,QAASL,GAGF,CACPG,KAAMC,IAIVH,EAAS,CACPE,KAAMC,EACNC,QAAS,CACPR,IACAC,SACAC,UAIJ,IAAIJ,EAAQ,YAAQE,EAAR,iBAAkBE,GAC9B,GAAID,EAAQ,CACV,IAAIQ,EACJ,OAAQR,GACN,IAAK,aACHQ,EAAY,KACZ,MACF,IAAK,aACHA,EAAS,yBACT,MACF,IAAK,eACHA,EAAS,wBACT,MACF,IAAK,aACHA,EAAS,yBACT,MACF,IAAK,eACHA,EAAS,wBACT,MACF,QACEA,EAAY,KAGZA,IACFX,EAAQ,UAAMA,GAAN,OAAiBW,IAI7BlB,EACGM,mBAAmBC,GACnBY,MAAK,SAAAC,GACJ,GAAIA,GAAOA,EAAIC,GAAI,CACjB,IAAMJ,EAAUG,EAAIE,KAEpB,GAAIV,EAAa,CACf,IAAIW,EAAcX,EAAYY,MAAMC,OAAOR,EAAQO,OAE/CE,EAAaT,EACjBS,EAAWF,MAAQD,EAEnBV,EAAS,CACPE,KAAMC,EACNC,QAASS,SAGXb,EAAS,CACPE,KAAMC,EACNC,iBAIJJ,EAAS,CACPE,KAAMC,EACNC,QAASG,OAIdO,OAAM,SAAAC,GACLf,EAAS,CACPE,KAAMC,EACNC,QAASW,SCKXC,G,kNACJC,aAAe,G,EAEfC,MAAQ,CACNC,mBAAoB,aACpBC,WAAY,GACZC,eAAe,G,EAWjBC,uBAAyB,SAAAC,GACnBA,EAAEC,OAAOC,OACX,EAAKC,SAAS,CACZL,eAAe,IAGnB,EAAKK,SAAS,CACZN,WAAYG,EAAEC,OAAOC,S,EAIzBE,oBAAsB,SAAAJ,GACP,SAATA,EAAEK,KAA+B,IAAbL,EAAEM,SACxB,EAAKC,oB,EAITC,qBAAuB,SAAAR,GACrB,EAAKG,SACH,CACEP,mBAAoBI,EAAEC,OAAOC,QAE/B,WACE,EAAKO,MAAMvC,mBACT,EAAKuC,MAAMC,OAAOrC,EAClB,EAAKsB,MAAMC,mBACX,EACA,U,EAuBRe,cAAgB,WACT,EAAKF,MAAMG,MAAMC,eACpB,EAAKJ,MAAMvC,mBACT,EAAKuC,MAAMC,OAAOrC,EAClB,EAAKsB,MAAMC,mBACX,EAAKa,MAAMC,OAAOnC,KAAO,EACzB,EAAKkC,MAAMG,MAAME,U,EAiRvBP,iBAAmB,WACb,EAAKZ,MAAME,YACb,EAAKM,SAAS,CACZL,eAAe,IAEjB,EAAKW,MAAMM,QAAQC,KAAK,cACxB,EAAKP,MAAMvC,mBAAmB,EAAKyB,MAAME,WAAY,KAAM,EAAG,OAE9D,EAAKM,SAAS,CACZL,eAAe,K,mFAzVfmB,KAAKR,MAAMC,OAAOrC,GACpB4C,KAAKd,SAAS,CACZN,WAAYoB,KAAKR,MAAMC,OAAOrC,M,iCAuCzB6C,EAAKC,GACd,IAMIC,EANAC,EAAK,CACP,CAAEnB,MAAO,EAAGoB,OAAQ,IACpB,CAAEpB,MAAO,IAAKoB,OAAQ,KACtB,CAAEpB,MAAO,IAAKoB,OAAQ,MAIxB,IAAKF,EAAIC,EAAGE,OAAS,EAAGH,EAAI,KACtBF,GAAOG,EAAGD,GAAGlB,OADYkB,KAK/B,OAAQF,EAAMG,EAAGD,GAAGlB,OAAOsB,QAAQL,GAAQM,QAPlC,2BAO8C,MAAQJ,EAAGD,GAAGE,S,wCAcpD,IAAD,OAChB,GACGL,KAAKR,MAAMG,MAAMc,YACjBT,KAAKR,MAAMG,MAAMpB,MAClByB,KAAKR,MAAMG,MAAME,QAuMjB,OACE,kBAACa,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,MAAO,CACLC,UAAW,SACXC,UAAW,MAGb,kBAACC,EAAA,EAAD,CAAkBC,KAAM,OA/M9B,IAAMrB,EAAUG,KAAKR,MAAMG,MAAME,QACjC,OAAIA,EAAQ1B,OAAS0B,EAAQ1B,MAAMmC,OAE/B,kBAACI,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEG,GAAI,GACJC,MAAO,CACLK,UACEC,OAAOC,WAAa,IAChBD,OAAOE,YAActB,KAAKvB,aAAe,IACzC2C,OAAOE,YAActB,KAAKvB,aAAe,IAC/C8C,UAAW,WAGb,kBAAC,IAAD,CACEC,UAAWxB,KAAKR,MAAMC,OAAOnC,KAAO0C,KAAKR,MAAMC,OAAOnC,KAAO,EAC7DmE,SAAUzB,KAAKN,cACfgC,SAAS,EACTC,OACE,kBAACjB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,MAAO,CACLC,UAAW,SACXC,UAAW,GACXY,aAAc,KANlB,iBAWA,kBAAClB,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,MAAO,CACLC,UAAW,SACXa,aAAc,KAGhB,kBAACX,EAAA,EAAD,CAAkBY,MAAM,QAAQX,KAAM,OAI5CY,WAAW,GAEX,kBAACpB,EAAA,EAAD,CAAMC,WAAS,GACZd,EAAQ1B,MAAM4D,KAAI,SAAAC,GACjB,OACE,kBAACtB,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJoB,GAAI,EACJnB,MAAO,CAAEoB,YAAa,GAAIC,WAAY,IACtC/C,IAAK4C,EAAKI,IAEV,kBAACC,EAAA,EAAD,CACEvB,MAAO,CAAEwB,OAAQ,IAAKC,OAAQ,WAC9BC,QAAS,WACKpB,OAAOqB,KAAKT,EAAKU,QAAS,UAClCC,UAGN,kBAACjC,EAAA,EAAD,CACEC,WAAS,EACTG,MAAO,CACL8B,OAAQ,KAGV,kBAAClC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,yBACEC,MAAO,CACL+B,aAAc,WACdC,WAAY,SACZC,SAAU,SACVC,SAAU,GACVC,WAAY,SAGbjB,EAAKkB,OAGV,kBAACxC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACH,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,MAAO,CACLC,UAAW,WAGb,kBAACoC,EAAA,EAAD,CACEH,SAAS,QACTlC,MAAO,CACLe,MAAO,WAIb,kBAACnB,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,MAAO,CACLsC,WAAY,EACZJ,SAAU,GACVhC,UAAW,EACXiC,WAAY,OACZlC,UAAW,SAGZ,EAAKsC,WAAWrB,EAAKsB,iBAAkB,OAKhD,kBAAC5C,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,MAAO,CACLyC,QAAS,GACTR,SAAU,SACVS,QAAS,cACTC,gBAAiB,EACjBC,gBAAiB,WACjBpB,OAAQ,GACRT,MAAO,YAGRG,EAAK2B,cAGV,kBAACjD,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAO,CAAEyC,QAAS,KAChC,kBAAC7C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACH,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,MAAO,CACLC,UAAW,SAGb,kBAAC6C,EAAA,EAAD,CAAMZ,SAAS,WAEjB,kBAACtC,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,MAAO,CACLC,UAAW,OACXiC,SAAU,GACVhC,UAAW,EACXiC,WAAY,SAGbjB,EAAK6B,SAAW7B,EAAK6B,SAAW,SAIvC,kBAACnD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACH,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,MAAO,CACLC,UAAW,SAGb,kBAAC+C,EAAA,EAAD,CACEhD,MAAO,CAAEwB,OAAQ,GAAIyB,MAAO,IAC5BC,IAAKhC,EAAKiC,MAAMC,cAGpB,kBAACxD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,MAAO,CACLC,UAAW,OACXiC,SAAU,GACVhC,UAAW,EACXiC,WAAY,OACZG,WAAY,IAGbpB,EAAKiC,MAAME,mBAgCtCnE,KAAKR,MAAMG,MAAME,SAAmD,GAAxCG,KAAKR,MAAMG,MAAME,QAAQuE,YAErD,kBAAC1D,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAO,CAAEE,UAAW,MAClC,kBAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGoB,GAAI,IACtB,kBAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIoB,GAAI,GACrB,kBAACI,EAAA,EAAD,KACE,kBAACgC,EAAA,EAAD,CACEvD,MAAO,CACLwB,OAAQ,KAEVgC,MAAM,oEACNC,MAAM,UAER,kBAACC,EAAA,EAAD,KACE,wBACE1D,MAAO,CACLC,UAAW,SACXwC,QAAS,KAHb,2BAeRvD,KAAKR,MAAMG,MAAMpB,IAEjB,kBAACmC,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAO,CAAEE,UAAW,MAClC,kBAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGoB,GAAI,IACtB,kBAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIoB,GAAI,GACrB,kBAACI,EAAA,EAAD,KACE,kBAACmC,EAAA,EAAD,KACE,wBAAI1D,MAAO,CAAE2D,cAAe,cAA5B,UACA,kBAACC,EAAA,EAAD,MACA,uBAAG5D,MAAO,CAAE8B,OAAQ,GAAII,SAAU,KAC/B2B,KAAKC,UAAU5E,KAAKR,MAAMG,MAAMpB,eAV/C,I,wCAkCiB,IAAD,OAChB,OACE,kBAACmC,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAO,CAAEyC,QAAS,KAChC,kBAAC7C,EAAA,EAAD,CAAMG,GAAI,GAAIoB,GAAI,GAChB,kBAAC4C,EAAA,EAAD,CACEzC,GAAG,cACH0C,MAAM,QACNC,YAAY,mCACZC,WACEhF,KAAKtB,MAAMG,cACP,8CACA,8BAENoG,WAAS,EACTvH,KAAK,SACLkF,OAAO,SACPsC,QAAQ,WACRC,WAAY,CACVrE,MAAO,CACLwB,OAAQ,KAGZ8C,WAAYpF,KAAKb,oBACjBF,MAAOe,KAAKtB,MAAME,WAClByG,SAAUrF,KAAKlB,uBACfwG,WAAY,CACVC,WAAW,EACXC,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACC,EAAA,EAAD,CACEC,aAAW,UACXpD,QAAS,WACP,EAAKlD,qBAGP,uBAAGuG,UAAU,qBAKrBC,MAAO9F,KAAKtB,MAAMG,cAClBkH,gBAAiB,CACfC,QAAQ,EACRC,SAAS,EACTnF,MAAO,CACLmC,WAAY,OACZD,SAAU,GACVnB,MAAO7B,KAAKtB,MAAMG,cAAgB,MAAQ,kBAKlD,kBAAC6B,EAAA,EAAD,CAAMG,GAAI,GAAIoB,GAAI,GAChB,kBAACiE,EAAA,EAAD,CACEtD,OAAO,SACPsC,QAAQ,WACRpE,MAAO,CAAEiD,MAAO,MAAOX,WAAY,QAEnC,kBAAC+C,EAAA,EAAD,CACEF,SAAS,EACTnF,MAAO,CACLmC,WAAY,OACZD,SAAU,GACVnB,MAAO,eALX,gBAUA,kBAACuE,EAAA,EAAD,CACEC,WAAY,IACZpH,MAAOe,KAAKtB,MAAMC,mBAClB0G,SAAUrF,KAAKT,sBAEf,kBAAC+G,EAAA,EAAD,CAAUrH,MAAM,cAAhB,cACA,kBAACqH,EAAA,EAAD,CAAUrH,MAAM,cAAhB,cACA,kBAACqH,EAAA,EAAD,CAAUrH,MAAM,gBAAhB,gBACA,kBAACqH,EAAA,EAAD,CAAUrH,MAAM,cAAhB,cACA,kBAACqH,EAAA,EAAD,CAAUrH,MAAM,gBAAhB,sB,+BASV,OACE,kBAACyB,EAAA,EAAD,CAAMC,WAAS,GAgHb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGoB,GAAI,IACtB,kBAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIoB,GAAI,GACpBjC,KAAKuG,kBACN,kBAAC7B,EAAA,EAAD,MACA,kBAAChE,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMG,GAAI,GAAIoB,GAAI,GAChB,kBAACiE,EAAA,EAAD,CACEtD,OAAO,SACP9B,MAAO,CACLiC,SAAU,SACVS,QAAS,cACTC,gBAAiB,EACjBC,gBAAiB,WACjBvC,UAAW,GACXU,MAAO,UACP2E,SAAU,aACVC,UAAW,SACXzD,SAAU,KAGXhD,KAAKR,MAAMG,MAAME,SAClBG,KAAKR,MAAMG,MAAME,QAAQ1B,OACzB6B,KAAKR,MAAMG,MAAME,QAAQ1B,MAAMmC,QAC/BN,KAAKR,MAAMG,MAAME,QAAQuE,YAHxB,UAIMpE,KAAKR,MAAMG,MAAME,QAAQuE,YAJ/B,yBAI2DpE,KAAKR,MAAMC,OAAOrC,EAJ7E,MAKG4C,KAAKR,MAAMG,MAAMc,YAAcT,KAAKR,MAAMC,OAAOrC,EACjD,eADA,0BAEmB4C,KAAKR,MAAMC,OAAOrC,EAFrC,SAMT4C,KAAK0G,wB,GA9kBQC,cAgmBlBC,EAAkBC,aAlqBT,SAAAC,GAAK,MAAK,CACvBC,SAAU,CACR,UAAW,CACTC,gBAAiB,OACjB,sBAAuB,CACrBnF,MAAOiF,EAAMG,QAAQC,OAAOC,QAGhC,WAAY,CACVH,gBAAiBF,EAAMG,QAAQG,QAAQC,KACvC,sBAAuB,CACrBxF,MAAOiF,EAAMG,QAAQC,OAAOC,QAGhC,UAAW,CACTH,gBAAiBF,EAAMG,QAAQG,QAAQC,KACvC,sBAAuB,CACrBxF,MAAOiF,EAAMG,QAAQC,OAAOC,SAIlCG,eAAgB,CACd,oBAAqB,CACnBzF,MAAOiF,EAAMG,QAAQC,OAAOC,OAE9BH,gBAAiBF,EAAMG,QAAQG,QAAQC,KACvC,UAAW,CACTL,gBAAiBF,EAAMG,QAAQG,QAAQC,KACvC,sBAAuB,CACrBxF,MAAOiF,EAAMG,QAAQC,OAAOC,QAGhC,WAAY,CACVH,gBAAiBF,EAAMG,QAAQG,QAAQC,KACvC,sBAAuB,CACrBxF,MAAOiF,EAAMG,QAAQC,OAAOC,QAGhC,UAAW,CACTH,gBAAiBF,EAAMG,QAAQG,QAAQC,KACvC,sBAAuB,CACrBxF,MAAOiF,EAAMG,QAAQC,OAAOC,SAOlCI,eAAgB,CACd,UAAW,CACTP,gBAAiB,SAEnB,UAAW,CACTA,gBAAiB,SAEnBzE,OAAQ,QAEViF,WAAY,CACVvE,WAAY,OACZD,SAAU,GACVjC,UAAW,UAEbqG,QAAS,GACTK,KAAM,MAmmBgBZ,CAAmBrI,GAE5BkJ,eAbS,SAAAhJ,GACtB,OAAOA,KAGkB,SAAAlB,GACzB,MAAO,CACLP,mBAAoB,SAACG,EAAGuK,EAASrK,EAAMC,GAAnB,OAClBC,EAASoK,EAAgCxK,EAAGuK,EAASrK,EAAMC,QAMlDmK,CAGbd,GCrpBaiB,G,wLA5BX,OACE,kBAACnH,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAO,CAAEE,UAAW,IAAK8G,cAAe,MACtD,kBAACpH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGoB,GAAI,IACtB,kBAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIoB,GAAI,GACrB,kBAACI,EAAA,EAAD,KACE,kBAACmC,EAAA,EAAD,KACE,wBAAI1D,MAAO,CAAE2D,cAAe,cAA5B,kBACA,kBAACC,EAAA,EAAD,MACA,uBAAG5D,MAAO,CAAE8B,OAAQ,GAAII,SAAU,KAAlC,wEAIA,6BACA,uBAAGlC,MAAO,CAAE8B,OAAQ,GAAII,SAAU,KAAlC,gS,GAfM2D,cCDLoB,G,mMAPX/H,KAAKR,MAAMM,QAAQC,KAAK,O,+BAGxB,OAAO,8D,GALY4G,c,SCWjBqB,G,kNACJtJ,MAAQ,CACNE,WAAY,GACZC,eAAe,G,EAGjBC,uBAAyB,SAAAC,GACnBA,EAAEC,OAAOC,OACX,EAAKC,SAAS,CACZL,eAAe,IAGnB,EAAKK,SAAS,CACZN,WAAYG,EAAEC,OAAOC,S,EAIzBE,oBAAsB,SAAAJ,GACP,SAATA,EAAEK,KAA+B,IAAbL,EAAEM,SACxB,EAAKC,oB,EAITA,iBAAmB,WACb,EAAKZ,MAAME,YACb,EAAKM,SAAS,CACZL,eAAe,IAGjB,EAAKW,MAAMM,QAAQC,KAAK,cAExB,EAAKP,MAAMvC,mBAAmB,EAAKyB,MAAME,WAAY,KAAM,EAAG,OAE9D,EAAKM,SAAS,CACZL,eAAe,K,wEAKX,IAAD,OACP,OACE,kBAAC6B,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,yBAAKC,MAAO,CAAEE,UAAW,GAAIY,aAAc,GAAIb,UAAW,SACxD,wBAAID,MAAO,CAAE2D,cAAe,cAA5B,kCAGA,yBAAK3D,MAAO,CAAEe,MAAO,aAAcb,WAAY,KAC7C,0BAAMF,MAAO,CAAEmC,WAAY,IAAKD,SAAU,KAA1C,yBAGA,0BACElC,MAAO,CACLmC,WAAY,IACZG,WAAY,GACZJ,SAAU,GACViF,UAAW,WALf,4CAaN,kBAACvH,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,wBAAIC,MAAO,CAAE2D,cAAe,cAA5B,WACA,kBAACC,EAAA,EAAD,OAEF,kBAAChE,EAAA,EAAD,CACEC,WAAS,EACTG,MAAO,CACLwB,OAAQ,IACRiB,QAAS,GACTvC,UAAW,GACXY,aAAc,KAGhB,kBAAClB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGoB,GAAI,IACtB,kBAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIoB,GAAI,GACrB,kBAAC4C,EAAA,EAAD,CACEzC,GAAG,cACH0C,MAAM,QACNC,YAAY,mCACZC,WACEhF,KAAKtB,MAAMG,cACP,8CACA,8BAENoG,WAAS,EACTvH,KAAK,SACLkF,OAAO,SACPsC,QAAQ,WACRC,WAAY,CACVrE,MAAO,CACLwB,OAAQ,KAGZ8C,WAAYpF,KAAKb,oBACjBF,MAAOe,KAAKtB,MAAME,WAClByG,SAAUrF,KAAKlB,uBACfwG,WAAY,CACVC,WAAW,EACXC,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACC,EAAA,EAAD,CACEC,aAAW,UACXpD,QAAS,WACP,EAAKlD,qBAGP,uBAAGuG,UAAU,qBAKrBC,MAAO9F,KAAKtB,MAAMG,cAClBkH,gBAAiB,CACfC,QAAQ,EACRC,SAAS,EACTnF,MAAO,CACLmC,WAAY,OACZD,SAAU,GACVnB,MAAO7B,KAAKtB,MAAMG,cAAgB,MAAQ,mBAMpD,kBAAC6B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,MAAO,CAAEC,UAAW,WACrC,kBAACmH,EAAA,EAAD,CACEhD,QAAQ,YACR1C,QAASxC,KAAKV,iBACdwB,MAAO,CACLkG,gBAAiB,aACjB9E,YAAa,GACbiG,aAAc,GACdnF,SAAU,GACVe,MAAO,IACPlC,MAAO,UATX,aAiBN,kBAACnB,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAO,CAAEE,UAAW,GAAIY,aAAc,MACpD,kBAAClB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,wBAAIC,MAAO,CAAE2D,cAAe,cAA5B,WACA,kBAACC,EAAA,EAAD,OAEF,kBAAChE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,MAAO,CAAEE,UAAW,KAAvC,wB,GA9JO2F,cAoLNe,gBAXS,SAAAhJ,GACtB,OAAOA,KAGkB,SAAAlB,GACzB,MAAO,CACLP,mBAAoB,SAACG,EAAGC,EAAQC,EAAMC,GAAlB,OAClBC,EAASoK,EAAgCxK,EAAGC,EAAQC,EAAMC,QAIjDmK,CAGbM,G,8BCvKII,G,2MACJ1J,MAAQ,CACN2J,SAAU,G,EAGZC,kBAAoB,SAACxI,EAASyI,EAAOF,EAAUG,GAC7C,EAAKtJ,SAAS,CAAEmJ,aAAY,WACtBvI,EAAQ2I,SAAShJ,SAAW+I,EAC9B1I,EAAQC,KAAKwI,EAAQzI,EAAQ2I,SAAShJ,QAEtCK,EAAQC,KAAKwI,O,EAKnBG,aAAe,SAACC,EAAON,GACrB,EAAKnJ,SAAS,CAAEmJ,aAAY,gB,wEAGpB,IAAD,OACDO,EAAa,CACjB,CAAE9D,MAAO,eAAgByD,MAAO,KAChC,CAAEzD,MAAO,QAASyD,MAAO,WA0BrBM,EAAUC,aAAW,YAAkB,IAAfhJ,EAAc,EAAdA,QAmC5B,OAjCEsB,OAAOC,WAAa,IAClB,yBACEe,GAAG,UACHI,QAAS,kBAAM,EAAK8F,kBAAkBxI,EAAS,IAAK,GAAG,IACvDgB,MAAO,CACLe,MAAO,aACPmB,SAAU,GACVC,WAAY,OACZd,WAAY,GACZD,YAAa,GACbnB,UAAW,SACXwB,OAAQ,YAVZ,cAgBA,yBACEH,GAAG,UACHI,QAAS,kBAAM,EAAK8F,kBAAkBxI,EAAS,IAAK,GAAG,IACvDgB,MAAO,CACLe,MAAO,aACPmB,SAAU,GACVC,WAAY,OACZd,WAAY,GACZD,YAAa,GACbnB,UAAW,SACXwB,OAAQ,YAVZ,SAmBN,OACE,kBAACwG,GAAA,EAAD,CAAQrD,SAAS,QAAQ5E,MAAO,CAAEkI,WAAY,UAC5C,kBAACtI,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACH,EAAA,EAAD,CAAMC,WAAS,GAab,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACgI,EAAD,SAIN,kBAACnI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAjFjB,kBAACoI,GAAA,EAAD,CACEC,eAAe,UACfC,UAAU,UACVlK,MAAO,EAAKP,MAAM2J,UAEjBO,EAAW7G,KAAI,SAACqH,EAAKjJ,GACpB,IAAMkJ,EAAYP,aAAW,gBAAGhJ,EAAH,EAAGA,QAAH,OAC3B,kBAACwJ,GAAA,EAAD,CACExE,MAAOsE,EAAItE,MACXhE,MAAO,CAAEe,MAAO,QAASoB,WAAY,OAAQD,SAAU,IACvDR,QAAS,kBACP,EAAK8F,kBAAkBxI,EAASsJ,EAAIb,MAAOpI,GAAG,SAIpD,OAAO,kBAACkJ,EAAD,iB,GA1CE1C,aAqHNE,eA9IA,CACb0C,KAAM,CACJC,SAAU,EACV3H,MAAO,cAET4H,QAAS,CAEP5H,MAAO,aACP6H,YAAa,GACb1I,UAAW,GACX8G,cAAe,IAEjB6B,cAAe,CACb9H,MAAO,aACP+H,aAAc,wBACdF,YAAa,GACb1I,UAAW,GACX8G,cAAe,IAEjB+B,WAAY,CACVhI,MAAO,QACPuB,WAAY,KAyHDyD,CAAmBuB,IC3GnB0B,G,iLApCX,OACE,yBACEhJ,MAAO,CACL4E,SAAU,QACVqE,OAAQ,EACRC,KAAM,EACN1H,OAAQ,GACRyB,MAAO,OACPiD,gBAAiB,UAGnB,kBAACtC,EAAA,EAAD,MACA,kBAAChE,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,MAAO,CAAEE,UAAW,GAAID,UAAW,WACnD,yBACED,MAAO,CACLe,MAAO,UACPU,OAAQ,WAEVC,QAAS,WACPpB,OAAOqB,KACL,mDACA,YARN,wB,GAjBSkE,a,kBC4DNsD,I,OAAAA,aAAgB,CAC7BtK,MA5DY,WAQR,IAPJjB,EAOG,uDAPK,CACN+B,YAAY,EACZZ,SAAS,EACTtB,KAAK,EACLqB,eAAe,GAEjBsK,EACG,uCACH,OAAQA,EAAOxM,MACb,KAAKC,EACH,MAAO,CACL8C,YAAY,EACZZ,SAAS,EACTtB,KAAK,EACLqB,eAAe,GAEnB,KAAKjC,EACH,MAAO,CACL8C,YAAY,EACZZ,QAASqK,EAAOtM,QAChBW,KAAK,EACLqB,eAAe,GAEnB,KAAKjC,EACH,MAAO,CACL8C,YAAY,EACZZ,QAASqK,EAAOtM,QAChBW,KAAK,EACLqB,eAAe,GAEnB,KAAKjC,EACH,MAAO,CACL8C,YAAY,EACZZ,QAASqK,EAAOtM,QAChBW,KAAK,EACLqB,eAAe,GAEnB,KAAKjC,EACH,MAAO,CACL8C,YAAY,EACZZ,SAAS,EACTtB,IAAK2L,EAAOtM,QACZgC,eAAe,GAEnB,QACE,OAAOlB,IAeXe,OAXa,WAAgE,IAA/Df,EAA8D,uDAAtD,CAAEtB,GAAG,EAAOuK,SAAS,EAAOrK,MAAM,GAAS4M,EAAW,uCAC5E,OAAQA,EAAOxM,MACb,KAAKC,EACH,OAAOuM,EAAOtM,QAChB,QACE,OAAOc,OCpDPyL,GACc,kBAAX/I,QAAuBA,OAAOgJ,qCACjChJ,OAAOgJ,qCAAqC,IAG5CC,KAEAC,GAAc,CAACC,MAIrB,IAAMC,GAAWL,GAAiBM,KAAe,WAAf,EAAmBH,KAEtCI,GADDC,aAAYC,GAAaJ,ICCjC1D,I,OAAQ+D,YAAe,CAC3BC,WAAY,CACVC,iBAAiB,GAEnB9D,QAAS,CAEPG,QAAS,CAEPC,KAAM,WAIR2D,UAAW,CACTC,MAAO,UACP5D,KAAM,UAEN6D,aAAc,eA+BLC,G,iLAvBX,OACE,kBAAC,IAAD,CAAUT,MAAOA,IACf,kBAAC,IAAD,KACE,6BACE,kBAACU,EAAA,EAAD,CAAkBtE,MAAOA,IACvB,kBAAC,GAAD,MACA,yBAAKhG,MAAO,CAAEE,UAAW,KACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqK,KAAK,IAAIC,OAAK,EAACC,UAAWvD,KACjC,kBAAC,IAAD,CAAOqD,KAAK,aAAaC,OAAK,EAACC,UAAW/M,IAC1C,kBAAC,IAAD,CAAO6M,KAAK,SAASC,OAAK,EAACC,UAAW1D,IACtC,kBAAC,IAAD,CAAO0D,UAAWxD,OAIxB,kBAAC,GAAD,a,GAjBYpB,aC9BJ6E,QACW,cAA7BpK,OAAOqH,SAASgD,UAEe,UAA7BrK,OAAOqH,SAASgD,UAEhBrK,OAAOqH,SAASgD,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAACC,GAAD,MAAYC,SAASC,eAAe,SD4H9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpO,MAAK,SAAAqO,GACjCA,EAAaC,kB","file":"static/js/main.7b0ede85.chunk.js","sourcesContent":["export default {\n  GET_REPOS_FROM_GITHUB: \"GET_REPOS_FROM_GITHUB\",\n  GET_REPOS_FROM_GITHUB_SUCCESS: \"GET_REPOS_FROM_GITHUB_SUCCESS\",\n  GET_REPOS_FROM_GITHUB_ERROR: \"GET_REPOS_FROM_GITHUB_ERROR\",\n  SET_SEARCH_CRITERIA: \"SET_SEARCH_CRITERIA\",\n  LOAD_MORE_REPOS_FROM_GITHUB: \"LOAD_MORE_REPOS_FROM_GITHUB\",\n  LOAD_MORE_REPOS_FROM_GITHUB_SUCCESS: \"LOAD_MORE_REPOS_FROM_GITHUB_SUCCESS\"\n};\n","import apisauce from \"apisauce\";\n\nconst apiUrl = \"https://api.github.com/search/\";\n\nconst create = (baseURL = apiUrl) => {\n  const api = apisauce.create({\n    baseURL,\n    headers: {\n      // 'Cache-Control': 'no-cache',\n      // 'Cache-Control': 'no-cache',\n      // 'Content-Type': 'application/json'\n    },\n    // withCredentials: true,\n    timeout: 5000\n  });\n\n  const getReposFromGithub = queryStr => api.get(`repositories?${queryStr}`);\n\n  return {\n    getReposFromGithub\n  };\n};\n\nconst api = create();\n\nexport default api;\n","import types from \"../types/\";\nimport api from \"../../services/api/\";\n\nconst getReposFromGithub = (q, filter, page, lastResults) => (\n  dispatch,\n  getState\n) => {\n  if (lastResults) {\n    dispatch({\n      type: types.LOAD_MORE_REPOS_FROM_GITHUB,\n      payload: lastResults\n    });\n  } else {\n    dispatch({\n      type: types.GET_REPOS_FROM_GITHUB\n    });\n  }\n\n  dispatch({\n    type: types.SET_SEARCH_CRITERIA,\n    payload: {\n      q,\n      filter,\n      page\n    }\n  });\n\n  let queryStr = `q=${q}&page=${page}`;\n  if (filter) {\n    let filterStr;\n    switch (filter) {\n      case \"best-match\":\n        filterStr = null;\n        break;\n      case \"most-stars\":\n        filterStr = `&sort=stars&order=desc`;\n        break;\n      case \"fewest-stars\":\n        filterStr = `&sort=stars&order=asc`;\n        break;\n      case \"most-forks\":\n        filterStr = `&sort=forks&order=desc`;\n        break;\n      case \"fewest-forks\":\n        filterStr = `&sort=forks&order=asc`;\n        break;\n      default:\n        filterStr = null;\n        break;\n    }\n    if (filterStr) {\n      queryStr = `${queryStr}${filterStr}`;\n    }\n  }\n\n  api\n    .getReposFromGithub(queryStr)\n    .then(res => {\n      if (res && res.ok) {\n        const payload = res.data;\n\n        if (lastResults) {\n          let joinedRepos = lastResults.items.concat(payload.items);\n\n          let newPayload = payload;\n          newPayload.items = joinedRepos;\n\n          dispatch({\n            type: types.LOAD_MORE_REPOS_FROM_GITHUB_SUCCESS,\n            payload: newPayload\n          });\n        } else {\n          dispatch({\n            type: types.GET_REPOS_FROM_GITHUB_SUCCESS,\n            payload\n          });\n        }\n      } else {\n        dispatch({\n          type: types.GET_REPOS_FROM_GITHUB_ERROR,\n          payload: res\n        });\n      }\n    })\n    .catch(err => {\n      dispatch({\n        type: types.GET_REPOS_FROM_GITHUB_ERROR,\n        payload: err\n      });\n    });\n};\n\nexport default {\n  getReposFromGithub\n};\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Grid,\n  Card,\n  CardMedia,\n  Avatar,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Divider,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  CardContent,\n  Select\n} from \"@material-ui/core\";\nimport { Star, Code, Clear } from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nimport ReduxActions from \"../../../redux/actions/index\";\n\nimport \"./css/style.css\";\n\nconst styles = theme => ({\n  menuItem: {\n    \"&:hover\": {\n      backgroundColor: \"grey\",\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    },\n    \"&:active\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    },\n    \"&:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    }\n  },\n  activeMenuItem: {\n    \"$primary, & $icon\": {\n      color: theme.palette.common.white\n    },\n    backgroundColor: theme.palette.primary.main,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    },\n    \"&:active\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    },\n    \"&:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& $primary, & $icon\": {\n        color: theme.palette.common.white\n      }\n    }\n    // '$primary, & $icon': {\n    //     color: theme.palette.common.white,\n    // }\n  },\n  headerMenuItem: {\n    \"&:hover\": {\n      backgroundColor: \"white\"\n    },\n    \"&:focus\": {\n      backgroundColor: \"white\"\n    },\n    cursor: \"auto\"\n  },\n  headerText: {\n    fontWeight: \"bold\",\n    fontSize: 18,\n    textAlign: \"center\"\n  },\n  primary: {},\n  icon: {}\n});\n\nclass Dashboard extends Component {\n  navBarHeight = 50; // todo: move to utils/metrics etc.\n\n  state = {\n    selectedSortFilter: \"best-match\",\n    searchText: \"\",\n    isSearchError: false\n  };\n\n  componentDidMount() {\n    if (this.props.search.q) {\n      this.setState({\n        searchText: this.props.search.q\n      });\n    }\n  }\n\n  handleSearchTextChange = e => {\n    if (e.target.value) {\n      this.setState({\n        isSearchError: false\n      });\n    }\n    this.setState({\n      searchText: e.target.value\n    });\n  };\n\n  handleEnterKeyPress = e => {\n    if (e.key == \"Enter\" || e.keyCode == 13) {\n      this.doSearchForRepos();\n    }\n  };\n\n  handleSelectedFilter = e => {\n    this.setState(\n      {\n        selectedSortFilter: e.target.value\n      },\n      () => {\n        this.props.getReposFromGithub(\n          this.props.search.q,\n          this.state.selectedSortFilter,\n          1,\n          null\n        );\n      }\n    );\n  };\n\n  // https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  nFormatter(num, digits) {\n    let si = [\n      { value: 1, symbol: \"\" },\n      { value: 1e3, symbol: \"k\" },\n      { value: 1e6, symbol: \"M\" }\n    ];\n    let rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    let i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  }\n\n  loadMoreRepos = () => {\n    if (!this.props.repos.isLoadingMore) {\n      this.props.getReposFromGithub(\n        this.props.search.q,\n        this.state.selectedSortFilter,\n        this.props.search.page + 1,\n        this.props.repos.results\n      );\n    }\n  };\n\n  renderRepoCards() {\n    if (\n      !this.props.repos.isFetching &&\n      !this.props.repos.err &&\n      this.props.repos.results\n    ) {\n      const results = this.props.repos.results;\n      if (results.items && results.items.length) {\n        return (\n          <Grid container>\n            <Grid\n              xs={12}\n              style={{\n                maxHeight:\n                  window.innerWidth > 800\n                    ? window.innerHeight - this.navBarHeight - 160\n                    : window.innerHeight - this.navBarHeight - 400,\n                overflowY: \"scroll\"\n              }}\n            >\n              <InfiniteScroll\n                pageStart={this.props.search.page ? this.props.search.page : 0}\n                loadMore={this.loadMoreRepos}\n                hasMore={true} // divide by total_count / item.length (const payload res is 30) = hasMore ..\n                loader={\n                  <Grid container>\n                    <Grid\n                      item\n                      xs={12}\n                      style={{\n                        textAlign: \"center\",\n                        marginTop: 20,\n                        marginBottom: 10\n                      }}\n                    >\n                      loading more.\n                    </Grid>\n                    <Grid\n                      item\n                      xs={12}\n                      style={{\n                        textAlign: \"center\",\n                        marginBottom: 20\n                      }}\n                    >\n                      <CircularProgress color=\"black\" size={20} />\n                    </Grid>\n                  </Grid>\n                }\n                useWindow={false}\n              >\n                <Grid container>\n                  {results.items.map(repo => {\n                    return (\n                      <Grid\n                        item\n                        xs={12}\n                        md={6}\n                        style={{ paddingLeft: 10, paddingTop: 10 }}\n                        key={repo.id}\n                      >\n                        <Card\n                          style={{ height: 160, cursor: \"pointer\" }}\n                          onClick={() => {\n                            const win = window.open(repo.svn_url, \"_blank\");\n                            win.focus();\n                          }}\n                        >\n                          <Grid\n                            container\n                            style={{\n                              margin: 10\n                            }}\n                          >\n                            <Grid item xs={9}>\n                              <div\n                                style={{\n                                  textOverflow: \"ellipsis\",\n                                  whiteSpace: \"nowrap\",\n                                  overflow: \"hidden\",\n                                  fontSize: 18,\n                                  fontWeight: \"bold\"\n                                }}\n                              >\n                                {repo.name}\n                              </div>\n                            </Grid>\n                            <Grid item xs={3}>\n                              <Grid container>\n                                <Grid\n                                  item\n                                  xs={3}\n                                  style={{\n                                    textAlign: \"center\"\n                                  }}\n                                >\n                                  <Star\n                                    fontSize=\"small\"\n                                    style={{\n                                      color: \"gold\"\n                                    }}\n                                  />\n                                </Grid>\n                                <Grid\n                                  item\n                                  xs={8}\n                                  style={{\n                                    marginLeft: 5,\n                                    fontSize: 14,\n                                    marginTop: 4,\n                                    fontWeight: \"bold\",\n                                    textAlign: \"left\"\n                                  }}\n                                >\n                                  {this.nFormatter(repo.stargazers_count, 1)}\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                          <Grid container>\n                            <Grid\n                              item\n                              xs={12}\n                              style={{\n                                padding: 10,\n                                overflow: \"hidden\",\n                                display: \"-webkit-box\",\n                                WebkitLineClamp: 3,\n                                WebkitBoxOrient: \"vertical\",\n                                height: 65,\n                                color: \"#908b8b\"\n                              }}\n                            >\n                              {repo.description}\n                            </Grid>\n                          </Grid>\n                          <Grid container style={{ padding: 10 }}>\n                            <Grid item xs={7}>\n                              <Grid container>\n                                <Grid\n                                  item\n                                  xs={2}\n                                  style={{\n                                    textAlign: \"left\"\n                                  }}\n                                >\n                                  <Code fontSize=\"small\" />\n                                </Grid>\n                                <Grid\n                                  item\n                                  xs={10}\n                                  style={{\n                                    textAlign: \"left\",\n                                    fontSize: 12,\n                                    marginTop: 4,\n                                    fontWeight: \"bold\"\n                                  }}\n                                >\n                                  {repo.language ? repo.language : \"N/A\"}\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                            <Grid item xs={5}>\n                              <Grid container>\n                                <Grid\n                                  item\n                                  xs={2}\n                                  style={{\n                                    textAlign: \"left\"\n                                  }}\n                                >\n                                  <Avatar\n                                    style={{ height: 20, width: 20 }}\n                                    src={repo.owner.avatar_url}\n                                  />\n                                </Grid>\n                                <Grid\n                                  item\n                                  xs={9}\n                                  style={{\n                                    textAlign: \"left\",\n                                    fontSize: 10,\n                                    marginTop: 4,\n                                    fontWeight: \"bold\",\n                                    marginLeft: 5\n                                  }}\n                                >\n                                  {repo.owner.login}\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Card>\n                      </Grid>\n                    );\n                  })}\n                </Grid>\n              </InfiniteScroll>\n            </Grid>\n          </Grid>\n        );\n      }\n    } else {\n      return (\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            style={{\n              textAlign: \"center\",\n              marginTop: 200\n            }}\n          >\n            <CircularProgress size={80} />\n          </Grid>\n        </Grid>\n      );\n    }\n\n    if (this.props.repos.results && this.props.repos.results.total_count == 0) {\n      return (\n        <Grid container style={{ marginTop: 100 }}>\n          <Grid item xs={1} md={2} />\n          <Grid item xs={10} md={8}>\n            <Card>\n              <CardMedia\n                style={{\n                  height: 400\n                }}\n                image=\"https://www.kcbi.org/wp-content/uploads/2019/03/homer-simpson.jpg\"\n                title=\"Homer\"\n              />\n              <CardContent>\n                <h3\n                  style={{\n                    textAlign: \"center\",\n                    padding: 15\n                  }}\n                >\n                  lol ... dumb search\n                </h3>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      );\n    }\n\n    if (this.props.repos.err) {\n      return (\n        <Grid container style={{ marginTop: 100 }}>\n          <Grid item xs={1} md={2} />\n          <Grid item xs={10} md={8}>\n            <Card>\n              <CardContent>\n                <h3 style={{ textTransform: \"uppercase\" }}>error.</h3>\n                <Divider />\n                <p style={{ margin: 15, fontSize: 18 }}>\n                  {JSON.stringify(this.props.repos.err)}\n                </p>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      );\n    }\n  }\n\n  doSearchForRepos = () => {\n    if (this.state.searchText) {\n      this.setState({\n        isSearchError: false\n      });\n      this.props.history.push(\"/dashboard\");\n      this.props.getReposFromGithub(this.state.searchText, null, 1, null); // todo: add filters\n    } else {\n      this.setState({\n        isSearchError: true\n      });\n    }\n  };\n\n  renderSearchNav() {\n    return (\n      <Grid container style={{ padding: 10 }}>\n        <Grid xs={12} md={9}>\n          <TextField\n            id=\"searchInput\"\n            label=\"What?\"\n            placeholder=\"Material-UI, React, Angular etc.\"\n            helperText={\n              this.state.isSearchError\n                ? \"Please enter a repository name or keywords.\"\n                : \"repository name or keywords\"\n            }\n            fullWidth\n            type=\"search\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            inputProps={{\n              style: {\n                height: 20\n              }\n            }}\n            onKeyPress={this.handleEnterKeyPress}\n            value={this.state.searchText}\n            onChange={this.handleSearchTextChange}\n            InputProps={{\n              autoFocus: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"Search.\"\n                    onClick={() => {\n                      this.doSearchForRepos();\n                    }}\n                  >\n                    <i className=\"fas fa-search\"></i>\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={this.state.isSearchError}\n            InputLabelProps={{\n              shrink: true,\n              focused: true,\n              style: {\n                fontWeight: \"bold\",\n                fontSize: 20,\n                color: this.state.isSearchError ? \"red\" : \"dodgerblue\"\n              }\n            }}\n          />\n        </Grid>\n        <Grid xs={12} md={3}>\n          <FormControl\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ width: \"80%\", marginLeft: \"10%\" }}\n          >\n            <InputLabel\n              focused={true}\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 20,\n                color: \"dodgerblue\"\n              }}\n            >\n              Sort options\n            </InputLabel>\n            <Select\n              labelWidth={120}\n              value={this.state.selectedSortFilter}\n              onChange={this.handleSelectedFilter}\n            >\n              <MenuItem value=\"best-match\">Best match</MenuItem>\n              <MenuItem value=\"most-stars\">Most stars</MenuItem>\n              <MenuItem value=\"fewest-stars\">Fewest stars</MenuItem>\n              <MenuItem value=\"most-forks\">Most forks</MenuItem>\n              <MenuItem value=\"fewest-forks\">Fewest forks</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  render() {\n    return (\n      <Grid container>\n        {/* <Paper\n            style={{\n              height: window.innerHeight - this.navBarHeight\n            }}\n          >\n            <MenuList>\n              <MenuItem\n                className={classes.headerMenuItem}\n                disableRipple\n                disableGutters\n                disableTouchRipple\n              >\n                <ListItemText className={classes.headerText} primary=\"Sort\" />\n              </MenuItem>\n              <Divider />\n              <MenuItem\n                className={classes.headerMenuItem}\n                style={{ margin: 15 }}\n                disableRipple\n                disableGutters\n                disableTouchRipple\n              >\n                <FormControl\n                  variant=\"outlined\"\n                  style={{ width: \"100%\", marginTop: 5 }}\n                >\n                  <InputLabel>By Stars</InputLabel>\n                  <Select\n                    value={this.state.starsFilter}\n                    onChange={this.handleStarsFilterChange}\n                    labelWidth={60}\n                  >\n                    <MenuItem value=\"asc\">Minimum</MenuItem>\n                    <MenuItem value=\"desc\">Maximum</MenuItem>\n                  </Select>\n                </FormControl>\n                <Clear\n                  style={{\n                    marginLeft: 10,\n                    color: \"grey\",\n                    cursor: \"pointer\"\n                  }}\n                  onClick={() => {\n                    this.setState(\n                      {\n                        starsFilter: \"\"\n                      },\n                      () => {\n                        this.props.getReposFromGithub(\n                          this.props.search.q,\n                          {\n                            stars: this.state.starsFilter,\n                            relevance: this.state.relevanceFilter\n                          },\n                          1,\n                          null\n                        );\n                      }\n                    );\n                  }}\n                />\n              </MenuItem>\n              <MenuItem\n                className={classes.headerMenuItem}\n                style={{ margin: 15 }}\n                disableRipple\n                disableGutters\n                disableTouchRipple\n              >\n                <FormControl\n                  variant=\"outlined\"\n                  style={{ width: \"100%\", marginTop: 5 }}\n                >\n                  <InputLabel>By Relevance</InputLabel>\n                  <Select\n                    value={this.state.relevanceFilter}\n                    onChange={this.handleRelevanceFilterChange}\n                    labelWidth={100}\n                  >\n                    <MenuItem value=\"asc\">Least</MenuItem>\n                    <MenuItem value=\"desc\">Most</MenuItem>\n                  </Select>\n                </FormControl>\n                <Clear\n                  style={{\n                    marginLeft: 10,\n                    color: \"grey\",\n                    cursor: \"pointer\"\n                  }}\n                  onClick={() => {\n                    this.setState(\n                      {\n                        relevanceFilter: \"\"\n                      },\n                      () => {\n                        this.props.getReposFromGithub(\n                          this.props.search.q,\n                          {\n                            stars: this.state.starsFilter,\n                            relevance: this.state.relevanceFilter\n                          },\n                          1,\n                          null\n                        );\n                      }\n                    );\n                  }}\n                />\n              </MenuItem>\n            </MenuList>\n          </Paper> */}\n        <Grid item xs={1} md={2} />\n        <Grid item xs={10} md={8}>\n          {this.renderSearchNav()}\n          <Divider />\n          <Grid container>\n            <Grid xs={12} md={8}>\n              <FormControl\n                margin=\"normal\"\n                style={{\n                  overflow: \"hidden\",\n                  display: \"-webkit-box\",\n                  WebkitLineClamp: 3,\n                  WebkitBoxOrient: \"vertical\",\n                  maxHeight: 45,\n                  color: \"#908b8b\",\n                  wordWrap: \"break-word\",\n                  wordBreak: \"normal\",\n                  fontSize: 14\n                }}\n              >\n                {this.props.repos.results &&\n                this.props.repos.results.items &&\n                this.props.repos.results.items.length &&\n                this.props.repos.results.total_count\n                  ? `${this.props.repos.results.total_count} results for '${this.props.search.q}'.`\n                  : this.props.repos.isFetching && this.props.search.q\n                  ? \"Searching...\"\n                  : `No results for '${this.props.search.q}'.`}\n              </FormControl>\n            </Grid>\n          </Grid>\n          {this.renderRepoCards()}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getReposFromGithub: (q, filters, page, lastResults) =>\n      dispatch(ReduxActions.getReposFromGithub(q, filters, page, lastResults))\n  };\n};\n\nconst styledComponent = withStyles(styles)(Dashboard);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(styledComponent);\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n  Divider,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\n\nimport \"./css/style.css\";\n\nclass About extends Component {\n  render() {\n    return (\n      <Grid container style={{ marginTop: 100, paddingBottom: 200 }}>\n        <Grid item xs={1} md={2} />\n        <Grid item xs={10} md={8}>\n          <Card>\n            <CardContent>\n              <h3 style={{ textTransform: \"uppercase\" }}>about the app.</h3>\n              <Divider />\n              <p style={{ margin: 15, fontSize: 18 }}>\n                This portal was created to help you find relevant and popular\n                repos.\n              </p>\n              <br />\n              <p style={{ margin: 15, fontSize: 18 }}>\n                And to show some via emmet extension -- Lorem ipsum dolor sit\n                amet consectetur adipisicing elit. Necessitatibus consequuntur,\n                et architecto recusandae ab quo non illum veritatis beatae! Cum\n                explicabo distinctio officia recusandae! Explicabo illo quos\n                deleniti voluptatem enim?\n              </p>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\n\nimport \"./css/style.css\";\n\nclass NotFound extends Component {\n  componentDidMount() {\n    this.props.history.push(\"/\");\n  }\n  render() {\n    return <div>This page does not exist.</div>;\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n  Divider\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\n\nimport ReduxActions from \"../../../redux/actions/index\";\n\nimport \"./css/style.css\";\n\nclass Splash extends Component {\n  state = {\n    searchText: \"\",\n    isSearchError: false\n  };\n\n  handleSearchTextChange = e => {\n    if (e.target.value) {\n      this.setState({\n        isSearchError: false\n      });\n    }\n    this.setState({\n      searchText: e.target.value\n    });\n  };\n\n  handleEnterKeyPress = e => {\n    if (e.key == \"Enter\" || e.keyCode == 13) {\n      this.doSearchForRepos();\n    }\n  };\n\n  doSearchForRepos = () => {\n    if (this.state.searchText) {\n      this.setState({\n        isSearchError: false\n      });\n      // go to dasboard view\n      this.props.history.push(\"/dashboard\");\n      // initial fetch of repos\n      this.props.getReposFromGithub(this.state.searchText, null, 1, null);\n    } else {\n      this.setState({\n        isSearchError: true\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Grid container>\n        <Grid container>\n          <Grid item xs={1} />\n          <Grid item xs={10}>\n            <div style={{ marginTop: 50, marginBottom: 20, textAlign: \"left\" }}>\n              <h1 style={{ textTransform: \"uppercase\" }}>\n                hunt for the right repository.\n              </h1>\n              <div style={{ color: \"dodgerblue\", marginTop: -20 }}>\n                <span style={{ fontWeight: 400, fontSize: 26 }}>\n                  Embrace your skills -\n                </span>\n                <span\n                  style={{\n                    fontWeight: 600,\n                    marginLeft: 10,\n                    fontSize: 26,\n                    fontStyle: \"italic\"\n                  }}\n                >\n                  contribute to an open-source project!\n                </span>\n              </div>\n            </div>\n          </Grid>\n          <Grid container>\n            <Grid item xs={1} />\n            <Grid item xs={10}>\n              <Grid item xs={12}>\n                <h3 style={{ textTransform: \"uppercase\" }}>explore</h3>\n                <Divider />\n              </Grid>\n              <Grid\n                container\n                style={{\n                  height: 150,\n                  padding: 15,\n                  marginTop: 40,\n                  marginBottom: 30\n                }}\n              >\n                <Grid item xs={0} md={2} />\n                <Grid item xs={12} md={8}>\n                  <TextField\n                    id=\"searchInput\"\n                    label=\"What?\"\n                    placeholder=\"Material-UI, React, Angular etc.\"\n                    helperText={\n                      this.state.isSearchError\n                        ? \"Please enter a repository name or keywords.\"\n                        : \"repository name or keywords\"\n                    }\n                    fullWidth\n                    type=\"search\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    inputProps={{\n                      style: {\n                        height: 35\n                      }\n                    }}\n                    onKeyPress={this.handleEnterKeyPress}\n                    value={this.state.searchText}\n                    onChange={this.handleSearchTextChange}\n                    InputProps={{\n                      autoFocus: true,\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"Search.\"\n                            onClick={() => {\n                              this.doSearchForRepos();\n                            }}\n                          >\n                            <i className=\"fas fa-search\"></i>\n                          </IconButton>\n                        </InputAdornment>\n                      )\n                    }}\n                    error={this.state.isSearchError}\n                    InputLabelProps={{\n                      shrink: true,\n                      focused: true,\n                      style: {\n                        fontWeight: \"bold\",\n                        fontSize: 24,\n                        color: this.state.isSearchError ? \"red\" : \"dodgerblue\"\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                <Button\n                  variant=\"contained\"\n                  onClick={this.doSearchForRepos}\n                  style={{\n                    backgroundColor: \"dodgerblue\",\n                    paddingLeft: 25,\n                    paddingRight: 25,\n                    fontSize: 18,\n                    width: 200,\n                    color: \"white\"\n                  }}\n                >\n                  Search\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container style={{ marginTop: 50, marginBottom: 100 }}>\n            <Grid item xs={1} />\n            <Grid item xs={10}>\n              <Grid item xs={12}>\n                <h3 style={{ textTransform: \"uppercase\" }}>for you</h3>\n                <Divider />\n              </Grid>\n              <Grid item xs={12} style={{ marginTop: 15 }}>\n                Coming soon!\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getReposFromGithub: (q, filter, page, lastResults) =>\n      dispatch(ReduxActions.getReposFromGithub(q, filter, page, lastResults))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Splash);\n","import React, { Component } from \"react\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Tabs, Tab, Grid } from \"@material-ui/core\";\n// todo all files ... import PropTypes from 'prop-types';\n\nconst styles = {\n  grow: {\n    flexGrow: 1,\n    color: \"dodgerblue\"\n  },\n  navItem: {\n    // todo: css media queries\n    color: \"dodgerblue\",\n    marginRight: 40,\n    marginTop: 20,\n    paddingBottom: 20\n  },\n  navItemActive: {\n    color: \"dodgerblue\",\n    borderBottom: \"10px solid dodgerblue\",\n    marginRight: 40,\n    marginTop: 30,\n    paddingBottom: 20\n  },\n  menuButton: {\n    color: \"black\",\n    marginLeft: 20\n  }\n};\n\nclass Navbar extends Component {\n  state = {\n    tabValue: 0\n  };\n\n  handleRouteChange = (history, route, tabValue, override) => {\n    this.setState({ tabValue }, () => {\n      if (history.location.search && !override) {\n        history.push(route + history.location.search);\n      } else {\n        history.push(route);\n      }\n    });\n  };\n\n  handleChange = (event, tabValue) => {\n    this.setState({ tabValue }, () => {});\n  };\n\n  render() {\n    const routerTabs = [\n      { label: \"Search Repos\", route: \"/\" },\n      { label: \"About\", route: \"/about\" }\n    ];\n\n    const renderRouterTabs = () => {\n      return (\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          value={this.state.tabValue}\n        >\n          {routerTabs.map((tab, i) => {\n            const RouterTab = withRouter(({ history }) => (\n              <Tab\n                label={tab.label}\n                style={{ color: \"black\", fontWeight: \"bold\", fontSize: 16 }}\n                onClick={() =>\n                  this.handleRouteChange(history, tab.route, i, false)\n                }\n              />\n            ));\n            return <RouterTab />;\n          })}\n        </Tabs>\n      );\n    };\n\n    const LogoBtn = withRouter(({ history }) => {\n      const btn =\n        window.innerWidth > 800 ? (\n          <div\n            id=\"navLogo\"\n            onClick={() => this.handleRouteChange(history, \"/\", 0, true)}\n            style={{\n              color: \"dodgerblue\",\n              fontSize: 20,\n              fontWeight: \"bold\",\n              paddingTop: 10,\n              paddingLeft: 10,\n              textAlign: \"center\",\n              cursor: \"pointer\"\n            }}\n          >\n            RepoHunter\n          </div>\n        ) : (\n          <div\n            id=\"navLogo\"\n            onClick={() => this.handleRouteChange(history, \"/\", 0, true)}\n            style={{\n              color: \"dodgerblue\",\n              fontSize: 20,\n              fontWeight: \"bold\",\n              paddingTop: 10,\n              paddingLeft: 10,\n              textAlign: \"center\",\n              cursor: \"pointer\"\n            }}\n          >\n            RH\n          </div>\n        );\n      return btn;\n    });\n\n    return (\n      <AppBar position=\"fixed\" style={{ background: \"white\" }}>\n        <Grid container>\n          <Grid item xs={2}>\n            <Grid container>\n              {/* TODO: for mobile navDrawer */}\n              {/* <Grid item xs={1}> */}\n              {/* xs should be 2 when in mobile, 1 is to center logo */}\n              {/* <IconButton\n                    className={classes.menuButton}\n                    color=\"inherit\"\n                    aria-label=\"Menu\"\n                    onClick={() => this.toggleDrawer(true)}\n                >\n                    <MenuIcon />\n                </IconButton> */}\n              {/* </Grid> */}\n              <Grid item xs={10}>\n                <LogoBtn />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={7}>\n            {renderRouterTabs()}\n          </Grid>\n        </Grid>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles)(Navbar);\n","import React, { Component } from \"react\";\nimport { Grid, Divider } from \"@material-ui/core\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          position: \"fixed\",\n          bottom: 0,\n          left: 0,\n          height: 50,\n          width: \"100%\",\n          backgroundColor: \"white\"\n        }}\n      >\n        <Divider />\n        <Grid container>\n          <Grid item xs={4} />\n          <Grid item xs={4} style={{ marginTop: 15, textAlign: \"center\" }}>\n            <div\n              style={{\n                color: \"#908b8b\",\n                cursor: \"pointer\"\n              }}\n              onClick={() => {\n                window.open(\n                  \"https://github.com/TheReactGuys?tab=repositories\",\n                  \"_blank\"\n                );\n              }}\n            >\n              @thereactguys\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import { combineReducers } from \"redux\";\n\nimport types from \"../types/\";\n\nconst repos = (\n  state = {\n    isFetching: false,\n    results: false,\n    err: false,\n    isLoadingMore: false\n  },\n  action\n) => {\n  switch (action.type) {\n    case types.GET_REPOS_FROM_GITHUB:\n      return {\n        isFetching: true,\n        results: false,\n        err: false,\n        isLoadingMore: false\n      };\n    case types.GET_REPOS_FROM_GITHUB_SUCCESS:\n      return {\n        isFetching: false,\n        results: action.payload,\n        err: false,\n        isLoadingMore: false\n      };\n    case types.LOAD_MORE_REPOS_FROM_GITHUB:\n      return {\n        isFetching: false,\n        results: action.payload,\n        err: false,\n        isLoadingMore: true\n      };\n    case types.LOAD_MORE_REPOS_FROM_GITHUB_SUCCESS:\n      return {\n        isFetching: false,\n        results: action.payload,\n        err: false,\n        isLoadingMore: false\n      };\n    case types.GET_REPOS_FROM_GITHUB_ERROR:\n      return {\n        isFetching: false,\n        results: false,\n        err: action.payload,\n        isLoadingMore: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst search = (state = { q: false, filters: false, page: false }, action) => {\n  switch (action.type) {\n    case types.SET_SEARCH_CRITERIA:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  repos,\n  search\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { logger } from \"redux-logger\";\n\nimport rootReducer from \"../reducers\";\n\n// enable redux devtool\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst middlewares = [thunk];\nif (!process.env.NODE_ENV || process.env.NODE_ENV == \"development\") {\n  middlewares.push(logger);\n}\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\nconst store = createStore(rootReducer, enhancer);\nexport default store;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport {\n  withStyles,\n  MuiThemeProvider,\n  createMuiTheme\n} from \"@material-ui/core/styles\";\nimport { Provider } from \"react-redux\";\n\nimport Dashboard from \"./components/views/Dashboard/Dashboard\";\nimport About from \"./components/views/About/About\";\nimport NotFound from \"./components/views/NotFound/NotFound\";\nimport Splash from \"./components/views/Splash/Splash\";\nimport Navbar from \"./components/common/Navbar/Navbar\";\nimport Footer from \"./components/common/Footer/Footer\";\n\nimport store from \"./redux/store/\";\n\nimport \"./index.css\";\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    // only takes hexcodes\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: \"#1e90ff\"\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: \"#0066ff\",\n      main: \"#0044ff\",\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: \"#ffcc00\"\n    }\n    // error: will use the default color\n  }\n});\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <MuiThemeProvider theme={theme}>\n              <Navbar />\n              <div style={{ marginTop: 50 }}>\n                <Switch>\n                  <Route path=\"/\" exact component={Splash} />\n                  <Route path=\"/dashboard\" exact component={Dashboard} />\n                  <Route path=\"/about\" exact component={About} />\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n            </MuiThemeProvider>\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./Router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}